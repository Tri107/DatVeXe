const TaiXe = require('../models/TaiXe');


module.exports = {

  // üîπ L·∫•y t·∫•t c·∫£ t√†i x·∫ø
  getAll: async (req, res, next) => {
    try {
      const data = await TaiXe.getAll();
      res.json(data);
    } catch (err) {
      next(err);
    }
  },

  // üîπ L·∫•y t√†i x·∫ø theo ID
  getById: async (req, res, next) => {
    try {
      const id = req.params.id;
      const item = await TaiXe.getById(id);
      if (!item) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y t√†i x·∫ø' });
      res.json(item);
    } catch (err) {
      next(err);
    }
  },

  // üîπ Th√™m t√†i x·∫ø m·ªõi
  create: async (req, res, next) => {
    try {
      const result = await TaiXe.create(req.body);
      res.status(201).json(result);
    } catch (err) {
      next(err);
    }
  },

  // üîπ C·∫≠p nh·∫≠t t√†i x·∫ø
  update: async (req, res, next) => {
    try {
      const id = req.params.id;
      const updated = await TaiXe.update(id, req.body);
      if (!updated) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y t√†i x·∫ø' });
      res.json(updated);
    } catch (err) {
      next(err);
    }
  },

  // üîπ X√≥a t√†i x·∫ø
  delete: async (req, res, next) => {
    try {
      const id = req.params.id;
      await TaiXe.delete(id);
      res.json({ message: 'X√≥a t√†i x·∫ø th√†nh c√¥ng' });
    } catch (err) {
      next(err);
    }
  },

  // üî∏ Dashboard: Th√¥ng tin t√†i x·∫ø + chuy·∫øn hi·ªán t·∫°i
  getDashboard: async (req, res, next) => {
    try {
      const taiXeId = req.params.id;
      const data = await TaiXe.getDashboardData(taiXeId);
      res.json(data);
    } catch (err) {
      next(err);
    }
  },

  // üî∏ Danh s√°ch chuy·∫øn xe theo t√†i x·∫ø
  getChuyenList: async (req, res, next) => {
  try {
    const taiXeId = req.params.taixe_id; // ‚úÖ ƒë·ªçc ƒë√∫ng param
    console.log("üì¶ API nh·∫≠n y√™u c·∫ßu l·∫•y chuy·∫øn cho t√†i x·∫ø ID:", taiXeId);

    const list = await TaiXe.getChuyenListByTaiXe(taiXeId);
    console.log("‚úÖ S·ªë chuy·∫øn t√¨m th·∫•y:", list.length);

    res.json(list);
  } catch (err) {
    console.error("‚ùå L·ªói getChuyenList:", err);
    next(err);
  }
},


  // üî∏ Chi ti·∫øt chuy·∫øn xe
  getChuyenDetail: async (req, res, next) => {
    try {
      const chuyenId = req.params.chuyen_id;
      console.log("üì¶ API l·∫•y chi ti·∫øt chuy·∫øn ID:", chuyenId);

      const detail = await TaiXe.getChuyenDetail(chuyenId);
      res.json(detail);
    } catch (err) {
      console.error("‚ùå L·ªói getChuyenDetail:", err);
      next(err);
    }
  },

  // üî∏ T√¨m t√†i x·∫ø theo s·ªë ƒëi·ªán tho·∫°i
  getByPhone: async (req, res, next) => {
    try {
      const { sdt } = req.params;
      const taiXe = await TaiXe.getByPhone(sdt);

      if (!taiXe)
        return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y t√†i x·∫ø v·ªõi s·ªë ƒëi·ªán tho·∫°i n√†y' });

      res.json(taiXe);
    } catch (err) {
      next(err);
    }
  },
};
